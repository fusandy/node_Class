<%- include('../parts/html-head') %>
<style>
  form .form-text{
      color:red;
  }
</style>
<%- include('../parts/navbar') %>

<div class="container">
  <div class="row">
    <div class="col-lg-6">
      
        <div class="card-body">
          <h5 class="card-title">新增資料</h5>
          <form name="addForm" onsubmit="sendData(); return false;">
            <div class="mb-3">
              <label for="name" class="form-label">Name<span style="color:red">*</span></label>
              <input type="text" class="form-control" id="name" name="name" required>
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="email" class="form-control" id="email" name="email">
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="mobile" class="form-label">Mobile(09XX-XXX-XXX)</label>
              <input type="number" class="form-control" id="mobile" name="mobile"
              data-pattern="09\d{2}-?\d{3}-?\d{3}">
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="birthday" class="form-label">Birthday</label>
              <input type="date" class="form-control" id="birthday" name="birthday">
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="address" class="form-label">Address</label>
              <input type="text" class="form-control" id="address" name="address">
              <div class="form-text"></div>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
    

    </div>
  </div>
</div>

<%- include('../parts/scripts') %>
<script>
    // const email_re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
    // const mobile_re = /^09\d{2}-?\d{3}-?\d{3}$/;
   
    function sendData(){

    const name = document.querySelector('#name');
    const email = document.querySelector('#email');
    const mobile = document.querySelector('#mobile');

    const nameValue = name.value;
    const emailValue = email.value;
    const mobileValue = mobile.value;

    // console.log('name.value',name)
    // console.log('email.value',email)
    // console.log('mobile.value',mobile)

    let isPass = true;
    const Joi = joi;
    const schema = Joi.object({
        name: Joi.string().alphanum().min(3).max(20).required(),
        email: Joi.string().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),
        mobile: /^09\d{2}-?\d{3}-?\d{3}$/,
    });
    
    //console.log('除錯結果:', schema.validate({name:`${nameValue}`, email: `${emailValue}`, mobile: `${mobileValue}`}, {abortEarly: false}));
    const errorInfo = schema.validate({name:`${nameValue}`, email: `${emailValue}`, mobile: `${mobileValue}`}, {abortEarly: false});

    if(errorInfo['error']){
      isPass = false;
      // alert(errorInfo.error);
      //console.log(errorInfo.error.details);
      const errorDetails = errorInfo.error.details;
      errorDetails.forEach(ele => {
        console.log(ele.context['key'] + ele.message);
        
        // let a = document.querySelector(`#${ele.context['key']}`);
        // a.nextElementSibling.innerHTML = ele.message;
        $(`#${ele.context['key']}`).next('.form-text').text(ele.message);
      
      });
    }


    console.log('isPass:', isPass)
    if(isPass){
        // 資料格式 : multipart formdata
        const fd = new FormData(document.addForm);
        // 可以列舉的類型都可以用...展開設定
        // console.log([...fd]);

        // 資料格式 : object，JSON.stringify(dataObj)轉JSON字串就可以傳送了
        // 把陣列的值放進物件裡
        const dataObj = {};
        for(let i of fd){
          dataObj[i[0]] = i[1];
        }
        // console.log({dataObj});
        
        // 資料格式 : urlencoded
        // const usp = new URLSearchParams(fd).toString();
        // console.log(usp);

        // submit完傳給自己，網址一樣是address-book/add，路徑一樣，就可以不用寫，只是方法不一樣
        fetch('', {
            method: 'POST',
            body: JSON.stringify(dataObj),
            headers:{
              'Content-Type': 'application/json'
              // 'Content-Type': 'application/x-www-form-urlencoded'
            }
        }).then(r=>r.json())
        .then(obj=>{
          console.log('obj:', obj);
          if(obj.success){
            alert('新增成功'); 
            location.href='/address-book/list';
            }
          // else{
          //   alert(obj.error || '資料新增時發生錯誤');
          // }
        });
      };
    }





    // 測試 joi
    // const Joi = joi;
    // const schema = Joi.object({
    //   username: Joi.string().alphanum().min(6).max(20).required(),

    //   age: Joi.number().required(),
    // });


    // console.log( schema.validate({username:'abk', age:'xyz'}));    
    // console.log( schema.validate({username:'abk', age:'xyz'}, {abortEarly: false})); // 跑完全部再一起show錯誤訊息
    // console.log( schema.validate({username:'abckjkljl', age:'25'}));
</script>
<%- include('../parts/html-foot') %>