<%- include('../parts/html-head') %>
<%- include('../parts/navbar') %>

<div class="container">
  <div class="row">
    <div class="col-lg-6">
      
        <div class="card-body">
          <h5 class="card-title">編輯資料</h5>
          <form name="addForm" onsubmit="checkForm(); return false;">
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name" name="name" value="<%= name %>">
            </div>
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="text" class="form-control" id="email" name="email" value="<%= email %>">
            </div>
            <div class="mb-3">
              <label for="mobile" class="form-label">Mobile</label>
              <input type="number" class="form-control" id="mobile" name="mobile" value="<%= mobile %>">
            </div>
            <div class="mb-3">
              <label for="birthday" class="form-label">Birthday</label>
              <input type="date" class="form-control" id="birthday" name="birthday" value="<%= toDateString(birthday) %>">
            </div>
            <div class="mb-3">
              <label for="address" class="form-label">Address</label>
              <input type="text" class="form-control" id="address" name="address" value="<%= address %>">
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
    

    </div>
  </div>
</div>

<%- include('../parts/scripts') %>
<script>
   function checkForm(){

    // 資料格式 : multipart formdata
    const fd = new FormData(document.addForm);
    // 可以列舉的類型都可以用...展開設定
    // console.log([...fd]);

    // 資料格式 : object，JSON.stringify(dataObj)轉JSON字串就可以傳送了
    const dataObj = {};
    for(let i of fd){
     // 把陣列的值放進物件裡
      dataObj[i[0]] = i[1];
    }
    console.log({dataObj});
    
    // 資料格式 : urlencoded
    const usp = new URLSearchParams(fd).toString();
    console.log(usp);

    // submit完傳給自己，網址一樣是address-book/add，路徑一樣，就可以不用寫，只是方法不一樣
    fetch('', {
        method: 'POST',
        body: JSON.stringify(dataObj),
        headers:{
          'Content-Type': 'application/json'
          // 'Content-Type': 'application/x-www-form-urlencoded'
        }
    }).then(r=>r.json())
    .then(obj=>{
      console.log('obj:',obj);
      console.log('obj.success:',obj.success)
      if(obj.success===false){
          alert('資料沒有修改');
      } else {
          alert('資料修改成功');
          location.href = '/address-book/list';
      }
    });

  }

    // 測試 joi
    const Joi = joi;
    const schema = Joi.object({
      username: Joi.string().alphanum().min(6).max(20).required(),

      age: Joi.number().required(),
    });


    console.log( schema.validate({username:'abk', age:'xyz'}));
    // 跑完全部再一起show錯誤訊息
    console.log( schema.validate({username:'abk', age:'xyz'}, {abortEarly: false}));
    console.log( schema.validate({username:'abckjkljl', age:'25'}));
</script>
<%- include('../parts/html-foot') %>